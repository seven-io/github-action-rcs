const Yt = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", qt = "ARRAYBUFFER not supported by this environment", Ct = "UINT8ARRAY not supported by this environment";
function vt(e, t, n, r) {
  let s, a, o;
  const h = t || [0], c = (n = n || 0) >>> 3, l = r === -1 ? 3 : 0;
  for (s = 0; s < e.length; s += 1) o = s + c, a = o >>> 2, h.length <= a && h.push(0), h[a] |= e[s] << 8 * (l + r * (o % 4));
  return { value: h, binLen: 8 * e.length + n };
}
function J(e, t, n) {
  switch (t) {
    case "UTF8":
    case "UTF16BE":
    case "UTF16LE":
      break;
    default:
      throw new Error("encoding must be UTF8, UTF16BE, or UTF16LE");
  }
  switch (e) {
    case "HEX":
      return function(r, s, a) {
        return function(o, h, c, l) {
          let d, u, f, g;
          if (o.length % 2 != 0) throw new Error("String of HEX type must be in byte increments");
          const w = h || [0], y = (c = c || 0) >>> 3, p = l === -1 ? 3 : 0;
          for (d = 0; d < o.length; d += 2) {
            if (u = parseInt(o.substr(d, 2), 16), isNaN(u)) throw new Error("String of HEX type contains invalid characters");
            for (g = (d >>> 1) + y, f = g >>> 2; w.length <= f; ) w.push(0);
            w[f] |= u << 8 * (p + l * (g % 4));
          }
          return { value: w, binLen: 4 * o.length + c };
        }(r, s, a, n);
      };
    case "TEXT":
      return function(r, s, a) {
        return function(o, h, c, l, d) {
          let u, f, g, w, y, p, N, A, E = 0;
          const x = c || [0], O = (l = l || 0) >>> 3;
          if (h === "UTF8") for (N = d === -1 ? 3 : 0, g = 0; g < o.length; g += 1) for (u = o.charCodeAt(g), f = [], 128 > u ? f.push(u) : 2048 > u ? (f.push(192 | u >>> 6), f.push(128 | 63 & u)) : 55296 > u || 57344 <= u ? f.push(224 | u >>> 12, 128 | u >>> 6 & 63, 128 | 63 & u) : (g += 1, u = 65536 + ((1023 & u) << 10 | 1023 & o.charCodeAt(g)), f.push(240 | u >>> 18, 128 | u >>> 12 & 63, 128 | u >>> 6 & 63, 128 | 63 & u)), w = 0; w < f.length; w += 1) {
            for (p = E + O, y = p >>> 2; x.length <= y; ) x.push(0);
            x[y] |= f[w] << 8 * (N + d * (p % 4)), E += 1;
          }
          else for (N = d === -1 ? 2 : 0, A = h === "UTF16LE" && d !== 1 || h !== "UTF16LE" && d === 1, g = 0; g < o.length; g += 1) {
            for (u = o.charCodeAt(g), A === !0 && (w = 255 & u, u = w << 8 | u >>> 8), p = E + O, y = p >>> 2; x.length <= y; ) x.push(0);
            x[y] |= u << 8 * (N + d * (p % 4)), E += 2;
          }
          return { value: x, binLen: 8 * E + l };
        }(r, t, s, a, n);
      };
    case "B64":
      return function(r, s, a) {
        return function(o, h, c, l) {
          let d, u, f, g, w, y, p, N = 0;
          const A = h || [0], E = (c = c || 0) >>> 3, x = l === -1 ? 3 : 0, O = o.indexOf("=");
          if (o.search(/^[a-zA-Z0-9=+/]+$/) === -1) throw new Error("Invalid character in base-64 string");
          if (o = o.replace(/=/g, ""), O !== -1 && O < o.length) throw new Error("Invalid '=' found in base-64 string");
          for (u = 0; u < o.length; u += 4) {
            for (w = o.substr(u, 4), g = 0, f = 0; f < w.length; f += 1) d = Yt.indexOf(w.charAt(f)), g |= d << 18 - 6 * f;
            for (f = 0; f < w.length - 1; f += 1) {
              for (p = N + E, y = p >>> 2; A.length <= y; ) A.push(0);
              A[y] |= (g >>> 16 - 8 * f & 255) << 8 * (x + l * (p % 4)), N += 1;
            }
          }
          return { value: A, binLen: 8 * N + c };
        }(r, s, a, n);
      };
    case "BYTES":
      return function(r, s, a) {
        return function(o, h, c, l) {
          let d, u, f, g;
          const w = h || [0], y = (c = c || 0) >>> 3, p = l === -1 ? 3 : 0;
          for (u = 0; u < o.length; u += 1) d = o.charCodeAt(u), g = u + y, f = g >>> 2, w.length <= f && w.push(0), w[f] |= d << 8 * (p + l * (g % 4));
          return { value: w, binLen: 8 * o.length + c };
        }(r, s, a, n);
      };
    case "ARRAYBUFFER":
      try {
        new ArrayBuffer(0);
      } catch {
        throw new Error(qt);
      }
      return function(r, s, a) {
        return function(o, h, c, l) {
          return vt(new Uint8Array(o), h, c, l);
        }(r, s, a, n);
      };
    case "UINT8ARRAY":
      try {
        new Uint8Array(0);
      } catch {
        throw new Error(Ct);
      }
      return function(r, s, a) {
        return vt(r, s, a, n);
      };
    default:
      throw new Error("format must be HEX, TEXT, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY");
  }
}
function St(e, t, n, r) {
  switch (e) {
    case "HEX":
      return function(s) {
        return function(a, o, h, c) {
          const l = "0123456789abcdef";
          let d, u, f = "";
          const g = o / 8, w = h === -1 ? 3 : 0;
          for (d = 0; d < g; d += 1) u = a[d >>> 2] >>> 8 * (w + h * (d % 4)), f += l.charAt(u >>> 4 & 15) + l.charAt(15 & u);
          return c.outputUpper ? f.toUpperCase() : f;
        }(s, t, n, r);
      };
    case "B64":
      return function(s) {
        return function(a, o, h, c) {
          let l, d, u, f, g, w = "";
          const y = o / 8, p = h === -1 ? 3 : 0;
          for (l = 0; l < y; l += 3) for (f = l + 1 < y ? a[l + 1 >>> 2] : 0, g = l + 2 < y ? a[l + 2 >>> 2] : 0, u = (a[l >>> 2] >>> 8 * (p + h * (l % 4)) & 255) << 16 | (f >>> 8 * (p + h * ((l + 1) % 4)) & 255) << 8 | g >>> 8 * (p + h * ((l + 2) % 4)) & 255, d = 0; d < 4; d += 1) w += 8 * l + 6 * d <= o ? Yt.charAt(u >>> 6 * (3 - d) & 63) : c.b64Pad;
          return w;
        }(s, t, n, r);
      };
    case "BYTES":
      return function(s) {
        return function(a, o, h) {
          let c, l, d = "";
          const u = o / 8, f = h === -1 ? 3 : 0;
          for (c = 0; c < u; c += 1) l = a[c >>> 2] >>> 8 * (f + h * (c % 4)) & 255, d += String.fromCharCode(l);
          return d;
        }(s, t, n);
      };
    case "ARRAYBUFFER":
      try {
        new ArrayBuffer(0);
      } catch {
        throw new Error(qt);
      }
      return function(s) {
        return function(a, o, h) {
          let c;
          const l = o / 8, d = new ArrayBuffer(l), u = new Uint8Array(d), f = h === -1 ? 3 : 0;
          for (c = 0; c < l; c += 1) u[c] = a[c >>> 2] >>> 8 * (f + h * (c % 4)) & 255;
          return d;
        }(s, t, n);
      };
    case "UINT8ARRAY":
      try {
        new Uint8Array(0);
      } catch {
        throw new Error(Ct);
      }
      return function(s) {
        return function(a, o, h) {
          let c;
          const l = o / 8, d = h === -1 ? 3 : 0, u = new Uint8Array(l);
          for (c = 0; c < l; c += 1) u[c] = a[c >>> 2] >>> 8 * (d + h * (c % 4)) & 255;
          return u;
        }(s, t, n);
      };
    default:
      throw new Error("format must be HEX, B64, BYTES, ARRAYBUFFER, or UINT8ARRAY");
  }
}
const at = 4294967296, m = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], _ = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428], F = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225], it = "Chosen SHA variant is not supported", Ut = "Cannot set numRounds with MAC";
function ht(e, t) {
  let n, r;
  const s = e.binLen >>> 3, a = t.binLen >>> 3, o = s << 3, h = 4 - s << 3;
  if (s % 4 != 0) {
    for (n = 0; n < a; n += 4) r = s + n >>> 2, e.value[r] |= t.value[n >>> 2] << o, e.value.push(0), e.value[r + 1] |= t.value[n >>> 2] >>> h;
    return (e.value.length << 2) - 4 >= a + s && e.value.pop(), { value: e.value, binLen: e.binLen + t.binLen };
  }
  return { value: e.value.concat(t.value), binLen: e.binLen + t.binLen };
}
function At(e) {
  const t = { outputUpper: !1, b64Pad: "=", outputLen: -1 }, n = e || {}, r = "Output length must be a multiple of 8";
  if (t.outputUpper = n.outputUpper || !1, n.b64Pad && (t.b64Pad = n.b64Pad), n.outputLen) {
    if (n.outputLen % 8 != 0) throw new Error(r);
    t.outputLen = n.outputLen;
  } else if (n.shakeLen) {
    if (n.shakeLen % 8 != 0) throw new Error(r);
    t.outputLen = n.shakeLen;
  }
  if (typeof t.outputUpper != "boolean") throw new Error("Invalid outputUpper formatting option");
  if (typeof t.b64Pad != "string") throw new Error("Invalid b64Pad formatting option");
  return t;
}
function W(e, t, n, r) {
  const s = e + " must include a value and format";
  if (!t) {
    if (!r) throw new Error(s);
    return r;
  }
  if (t.value === void 0 || !t.format) throw new Error(s);
  return J(t.format, t.encoding || "UTF8", n)(t.value);
}
class ft {
  constructor(t, n, r) {
    const s = r || {};
    if (this.t = n, this.i = s.encoding || "UTF8", this.numRounds = s.numRounds || 1, isNaN(this.numRounds) || this.numRounds !== parseInt(this.numRounds, 10) || 1 > this.numRounds) throw new Error("numRounds must a integer >= 1");
    this.o = t, this.h = [], this.u = 0, this.l = !1, this.A = 0, this.H = !1, this.S = [], this.p = [];
  }
  update(t) {
    let n, r = 0;
    const s = this.m >>> 5, a = this.C(t, this.h, this.u), o = a.binLen, h = a.value, c = o >>> 5;
    for (n = 0; n < c; n += s) r + this.m <= o && (this.U = this.v(h.slice(n, n + s), this.U), r += this.m);
    return this.A += r, this.h = h.slice(r >>> 5), this.u = o % this.m, this.l = !0, this;
  }
  getHash(t, n) {
    let r, s, a = this.R;
    const o = At(n);
    if (this.K) {
      if (o.outputLen === -1) throw new Error("Output length must be specified in options");
      a = o.outputLen;
    }
    const h = St(t, a, this.T, o);
    if (this.H && this.g) return h(this.g(o));
    for (s = this.F(this.h.slice(), this.u, this.A, this.L(this.U), a), r = 1; r < this.numRounds; r += 1) this.K && a % 32 != 0 && (s[s.length - 1] &= 16777215 >>> 24 - a % 32), s = this.F(s, a, 0, this.B(this.o), a);
    return h(s);
  }
  setHMACKey(t, n, r) {
    if (!this.M) throw new Error("Variant does not support HMAC");
    if (this.l) throw new Error("Cannot set MAC key after calling update");
    const s = J(n, (r || {}).encoding || "UTF8", this.T);
    this.k(s(t));
  }
  k(t) {
    const n = this.m >>> 3, r = n / 4 - 1;
    let s;
    if (this.numRounds !== 1) throw new Error(Ut);
    if (this.H) throw new Error("MAC key already set");
    for (n < t.binLen / 8 && (t.value = this.F(t.value, t.binLen, 0, this.B(this.o), this.R)); t.value.length <= r; ) t.value.push(0);
    for (s = 0; s <= r; s += 1) this.S[s] = 909522486 ^ t.value[s], this.p[s] = 1549556828 ^ t.value[s];
    this.U = this.v(this.S, this.U), this.A = this.m, this.H = !0;
  }
  getHMAC(t, n) {
    const r = At(n);
    return St(t, this.R, this.T, r)(this.Y());
  }
  Y() {
    let t;
    if (!this.H) throw new Error("Cannot call getHMAC without first setting MAC key");
    const n = this.F(this.h.slice(), this.u, this.A, this.L(this.U), this.R);
    return t = this.v(this.p, this.B(this.o)), t = this.F(n, this.R, this.m, t, this.R), t;
  }
}
function G(e, t) {
  return e << t | e >>> 32 - t;
}
function L(e, t) {
  return e >>> t | e << 32 - t;
}
function Wt(e, t) {
  return e >>> t;
}
function Nt(e, t, n) {
  return e ^ t ^ n;
}
function Kt(e, t, n) {
  return e & t ^ ~e & n;
}
function Bt(e, t, n) {
  return e & t ^ e & n ^ t & n;
}
function re(e) {
  return L(e, 2) ^ L(e, 13) ^ L(e, 22);
}
function T(e, t) {
  const n = (65535 & e) + (65535 & t);
  return (65535 & (e >>> 16) + (t >>> 16) + (n >>> 16)) << 16 | 65535 & n;
}
function se(e, t, n, r) {
  const s = (65535 & e) + (65535 & t) + (65535 & n) + (65535 & r);
  return (65535 & (e >>> 16) + (t >>> 16) + (n >>> 16) + (r >>> 16) + (s >>> 16)) << 16 | 65535 & s;
}
function nt(e, t, n, r, s) {
  const a = (65535 & e) + (65535 & t) + (65535 & n) + (65535 & r) + (65535 & s);
  return (65535 & (e >>> 16) + (t >>> 16) + (n >>> 16) + (r >>> 16) + (s >>> 16) + (a >>> 16)) << 16 | 65535 & a;
}
function ae(e) {
  return L(e, 7) ^ L(e, 18) ^ Wt(e, 3);
}
function ie(e) {
  return L(e, 6) ^ L(e, 11) ^ L(e, 25);
}
function oe(e) {
  return [1732584193, 4023233417, 2562383102, 271733878, 3285377520];
}
function jt(e, t) {
  let n, r, s, a, o, h, c;
  const l = [];
  for (n = t[0], r = t[1], s = t[2], a = t[3], o = t[4], c = 0; c < 80; c += 1) l[c] = c < 16 ? e[c] : G(l[c - 3] ^ l[c - 8] ^ l[c - 14] ^ l[c - 16], 1), h = c < 20 ? nt(G(n, 5), Kt(r, s, a), o, 1518500249, l[c]) : c < 40 ? nt(G(n, 5), Nt(r, s, a), o, 1859775393, l[c]) : c < 60 ? nt(G(n, 5), Bt(r, s, a), o, 2400959708, l[c]) : nt(G(n, 5), Nt(r, s, a), o, 3395469782, l[c]), o = a, a = s, s = G(r, 30), r = n, n = h;
  return t[0] = T(n, t[0]), t[1] = T(r, t[1]), t[2] = T(s, t[2]), t[3] = T(a, t[3]), t[4] = T(o, t[4]), t;
}
function ue(e, t, n, r) {
  let s;
  const a = 15 + (t + 65 >>> 9 << 4), o = t + n;
  for (; e.length <= a; ) e.push(0);
  for (e[t >>> 5] |= 128 << 24 - t % 32, e[a] = 4294967295 & o, e[a - 1] = o / at | 0, s = 0; s < e.length; s += 16) r = jt(e.slice(s, s + 16), r);
  return r;
}
let ce = class extends ft {
  constructor(e, t, n) {
    if (e !== "SHA-1") throw new Error(it);
    super(e, t, n);
    const r = n || {};
    this.M = !0, this.g = this.Y, this.T = -1, this.C = J(this.t, this.i, this.T), this.v = jt, this.L = function(s) {
      return s.slice();
    }, this.B = oe, this.F = ue, this.U = [1732584193, 4023233417, 2562383102, 271733878, 3285377520], this.m = 512, this.R = 160, this.K = !1, r.hmacKey && this.k(W("hmacKey", r.hmacKey, this.T));
  }
};
function xt(e) {
  let t;
  return t = e == "SHA-224" ? _.slice() : F.slice(), t;
}
function Tt(e, t) {
  let n, r, s, a, o, h, c, l, d, u, f;
  const g = [];
  for (n = t[0], r = t[1], s = t[2], a = t[3], o = t[4], h = t[5], c = t[6], l = t[7], f = 0; f < 64; f += 1) g[f] = f < 16 ? e[f] : se(L(w = g[f - 2], 17) ^ L(w, 19) ^ Wt(w, 10), g[f - 7], ae(g[f - 15]), g[f - 16]), d = nt(l, ie(o), Kt(o, h, c), m[f], g[f]), u = T(re(n), Bt(n, r, s)), l = c, c = h, h = o, o = T(a, d), a = s, s = r, r = n, n = T(d, u);
  var w;
  return t[0] = T(n, t[0]), t[1] = T(r, t[1]), t[2] = T(s, t[2]), t[3] = T(a, t[3]), t[4] = T(o, t[4]), t[5] = T(h, t[5]), t[6] = T(c, t[6]), t[7] = T(l, t[7]), t;
}
let he = class extends ft {
  constructor(e, t, n) {
    if (e !== "SHA-224" && e !== "SHA-256") throw new Error(it);
    super(e, t, n);
    const r = n || {};
    this.g = this.Y, this.M = !0, this.T = -1, this.C = J(this.t, this.i, this.T), this.v = Tt, this.L = function(s) {
      return s.slice();
    }, this.B = xt, this.F = function(s, a, o, h) {
      return function(c, l, d, u, f) {
        let g, w;
        const y = 15 + (l + 65 >>> 9 << 4), p = l + d;
        for (; c.length <= y; ) c.push(0);
        for (c[l >>> 5] |= 128 << 24 - l % 32, c[y] = 4294967295 & p, c[y - 1] = p / at | 0, g = 0; g < c.length; g += 16) u = Tt(c.slice(g, g + 16), u);
        return w = f === "SHA-224" ? [u[0], u[1], u[2], u[3], u[4], u[5], u[6]] : u, w;
      }(s, a, o, h, e);
    }, this.U = xt(e), this.m = 512, this.R = e === "SHA-224" ? 224 : 256, this.K = !1, r.hmacKey && this.k(W("hmacKey", r.hmacKey, this.T));
  }
};
class i {
  constructor(t, n) {
    this.N = t, this.I = n;
  }
}
function Et(e, t) {
  let n;
  return t > 32 ? (n = 64 - t, new i(e.I << t | e.N >>> n, e.N << t | e.I >>> n)) : t !== 0 ? (n = 32 - t, new i(e.N << t | e.I >>> n, e.I << t | e.N >>> n)) : e;
}
function H(e, t) {
  let n;
  return t < 32 ? (n = 32 - t, new i(e.N >>> t | e.I << n, e.I >>> t | e.N << n)) : (n = 64 - t, new i(e.I >>> t | e.N << n, e.N >>> t | e.I << n));
}
function Xt(e, t) {
  return new i(e.N >>> t, e.I >>> t | e.N << 32 - t);
}
function le(e, t, n) {
  return new i(e.N & t.N ^ e.N & n.N ^ t.N & n.N, e.I & t.I ^ e.I & n.I ^ t.I & n.I);
}
function fe(e) {
  const t = H(e, 28), n = H(e, 34), r = H(e, 39);
  return new i(t.N ^ n.N ^ r.N, t.I ^ n.I ^ r.I);
}
function P(e, t) {
  let n, r;
  n = (65535 & e.I) + (65535 & t.I), r = (e.I >>> 16) + (t.I >>> 16) + (n >>> 16);
  const s = (65535 & r) << 16 | 65535 & n;
  return n = (65535 & e.N) + (65535 & t.N) + (r >>> 16), r = (e.N >>> 16) + (t.N >>> 16) + (n >>> 16), new i((65535 & r) << 16 | 65535 & n, s);
}
function de(e, t, n, r) {
  let s, a;
  s = (65535 & e.I) + (65535 & t.I) + (65535 & n.I) + (65535 & r.I), a = (e.I >>> 16) + (t.I >>> 16) + (n.I >>> 16) + (r.I >>> 16) + (s >>> 16);
  const o = (65535 & a) << 16 | 65535 & s;
  return s = (65535 & e.N) + (65535 & t.N) + (65535 & n.N) + (65535 & r.N) + (a >>> 16), a = (e.N >>> 16) + (t.N >>> 16) + (n.N >>> 16) + (r.N >>> 16) + (s >>> 16), new i((65535 & a) << 16 | 65535 & s, o);
}
function me(e, t, n, r, s) {
  let a, o;
  a = (65535 & e.I) + (65535 & t.I) + (65535 & n.I) + (65535 & r.I) + (65535 & s.I), o = (e.I >>> 16) + (t.I >>> 16) + (n.I >>> 16) + (r.I >>> 16) + (s.I >>> 16) + (a >>> 16);
  const h = (65535 & o) << 16 | 65535 & a;
  return a = (65535 & e.N) + (65535 & t.N) + (65535 & n.N) + (65535 & r.N) + (65535 & s.N) + (o >>> 16), o = (e.N >>> 16) + (t.N >>> 16) + (n.N >>> 16) + (r.N >>> 16) + (s.N >>> 16) + (a >>> 16), new i((65535 & o) << 16 | 65535 & a, h);
}
function z(e, t) {
  return new i(e.N ^ t.N, e.I ^ t.I);
}
function we(e) {
  const t = H(e, 19), n = H(e, 61), r = Xt(e, 6);
  return new i(t.N ^ n.N ^ r.N, t.I ^ n.I ^ r.I);
}
function ge(e) {
  const t = H(e, 1), n = H(e, 8), r = Xt(e, 7);
  return new i(t.N ^ n.N ^ r.N, t.I ^ n.I ^ r.I);
}
function ye(e) {
  const t = H(e, 14), n = H(e, 18), r = H(e, 41);
  return new i(t.N ^ n.N ^ r.N, t.I ^ n.I ^ r.I);
}
const pe = [new i(m[0], 3609767458), new i(m[1], 602891725), new i(m[2], 3964484399), new i(m[3], 2173295548), new i(m[4], 4081628472), new i(m[5], 3053834265), new i(m[6], 2937671579), new i(m[7], 3664609560), new i(m[8], 2734883394), new i(m[9], 1164996542), new i(m[10], 1323610764), new i(m[11], 3590304994), new i(m[12], 4068182383), new i(m[13], 991336113), new i(m[14], 633803317), new i(m[15], 3479774868), new i(m[16], 2666613458), new i(m[17], 944711139), new i(m[18], 2341262773), new i(m[19], 2007800933), new i(m[20], 1495990901), new i(m[21], 1856431235), new i(m[22], 3175218132), new i(m[23], 2198950837), new i(m[24], 3999719339), new i(m[25], 766784016), new i(m[26], 2566594879), new i(m[27], 3203337956), new i(m[28], 1034457026), new i(m[29], 2466948901), new i(m[30], 3758326383), new i(m[31], 168717936), new i(m[32], 1188179964), new i(m[33], 1546045734), new i(m[34], 1522805485), new i(m[35], 2643833823), new i(m[36], 2343527390), new i(m[37], 1014477480), new i(m[38], 1206759142), new i(m[39], 344077627), new i(m[40], 1290863460), new i(m[41], 3158454273), new i(m[42], 3505952657), new i(m[43], 106217008), new i(m[44], 3606008344), new i(m[45], 1432725776), new i(m[46], 1467031594), new i(m[47], 851169720), new i(m[48], 3100823752), new i(m[49], 1363258195), new i(m[50], 3750685593), new i(m[51], 3785050280), new i(m[52], 3318307427), new i(m[53], 3812723403), new i(m[54], 2003034995), new i(m[55], 3602036899), new i(m[56], 1575990012), new i(m[57], 1125592928), new i(m[58], 2716904306), new i(m[59], 442776044), new i(m[60], 593698344), new i(m[61], 3733110249), new i(m[62], 2999351573), new i(m[63], 3815920427), new i(3391569614, 3928383900), new i(3515267271, 566280711), new i(3940187606, 3454069534), new i(4118630271, 4000239992), new i(116418474, 1914138554), new i(174292421, 2731055270), new i(289380356, 3203993006), new i(460393269, 320620315), new i(685471733, 587496836), new i(852142971, 1086792851), new i(1017036298, 365543100), new i(1126000580, 2618297676), new i(1288033470, 3409855158), new i(1501505948, 4234509866), new i(1607167915, 987167468), new i(1816402316, 1246189591)];
function Mt(e) {
  return e === "SHA-384" ? [new i(3418070365, _[0]), new i(1654270250, _[1]), new i(2438529370, _[2]), new i(355462360, _[3]), new i(1731405415, _[4]), new i(41048885895, _[5]), new i(3675008525, _[6]), new i(1203062813, _[7])] : [new i(F[0], 4089235720), new i(F[1], 2227873595), new i(F[2], 4271175723), new i(F[3], 1595750129), new i(F[4], 2917565137), new i(F[5], 725511199), new i(F[6], 4215389547), new i(F[7], 327033209)];
}
function Ot(e, t) {
  let n, r, s, a, o, h, c, l, d, u, f, g;
  const w = [];
  for (n = t[0], r = t[1], s = t[2], a = t[3], o = t[4], h = t[5], c = t[6], l = t[7], f = 0; f < 80; f += 1) f < 16 ? (g = 2 * f, w[f] = new i(e[g], e[g + 1])) : w[f] = de(we(w[f - 2]), w[f - 7], ge(w[f - 15]), w[f - 16]), d = me(l, ye(o), (p = h, N = c, new i((y = o).N & p.N ^ ~y.N & N.N, y.I & p.I ^ ~y.I & N.I)), pe[f], w[f]), u = P(fe(n), le(n, r, s)), l = c, c = h, h = o, o = P(a, d), a = s, s = r, r = n, n = P(d, u);
  var y, p, N;
  return t[0] = P(n, t[0]), t[1] = P(r, t[1]), t[2] = P(s, t[2]), t[3] = P(a, t[3]), t[4] = P(o, t[4]), t[5] = P(h, t[5]), t[6] = P(c, t[6]), t[7] = P(l, t[7]), t;
}
let be = class extends ft {
  constructor(e, t, n) {
    if (e !== "SHA-384" && e !== "SHA-512") throw new Error(it);
    super(e, t, n);
    const r = n || {};
    this.g = this.Y, this.M = !0, this.T = -1, this.C = J(this.t, this.i, this.T), this.v = Ot, this.L = function(s) {
      return s.slice();
    }, this.B = Mt, this.F = function(s, a, o, h) {
      return function(c, l, d, u, f) {
        let g, w;
        const y = 31 + (l + 129 >>> 10 << 5), p = l + d;
        for (; c.length <= y; ) c.push(0);
        for (c[l >>> 5] |= 128 << 24 - l % 32, c[y] = 4294967295 & p, c[y - 1] = p / at | 0, g = 0; g < c.length; g += 32) u = Ot(c.slice(g, g + 32), u);
        return w = f === "SHA-384" ? [u[0].N, u[0].I, u[1].N, u[1].I, u[2].N, u[2].I, u[3].N, u[3].I, u[4].N, u[4].I, u[5].N, u[5].I] : [u[0].N, u[0].I, u[1].N, u[1].I, u[2].N, u[2].I, u[3].N, u[3].I, u[4].N, u[4].I, u[5].N, u[5].I, u[6].N, u[6].I, u[7].N, u[7].I], w;
      }(s, a, o, h, e);
    }, this.U = Mt(e), this.m = 1024, this.R = e === "SHA-384" ? 384 : 512, this.K = !1, r.hmacKey && this.k(W("hmacKey", r.hmacKey, this.T));
  }
};
const ve = [new i(0, 1), new i(0, 32898), new i(2147483648, 32906), new i(2147483648, 2147516416), new i(0, 32907), new i(0, 2147483649), new i(2147483648, 2147516545), new i(2147483648, 32777), new i(0, 138), new i(0, 136), new i(0, 2147516425), new i(0, 2147483658), new i(0, 2147516555), new i(2147483648, 139), new i(2147483648, 32905), new i(2147483648, 32771), new i(2147483648, 32770), new i(2147483648, 128), new i(0, 32778), new i(2147483648, 2147483658), new i(2147483648, 2147516545), new i(2147483648, 32896), new i(0, 2147483649), new i(2147483648, 2147516424)], Se = [[0, 36, 3, 41, 18], [1, 44, 10, 45, 2], [62, 6, 43, 15, 61], [28, 55, 25, 21, 56], [27, 20, 39, 8, 14]];
function yt(e) {
  let t;
  const n = [];
  for (t = 0; t < 5; t += 1) n[t] = [new i(0, 0), new i(0, 0), new i(0, 0), new i(0, 0), new i(0, 0)];
  return n;
}
function Ae(e) {
  let t;
  const n = [];
  for (t = 0; t < 5; t += 1) n[t] = e[t].slice();
  return n;
}
function ot(e, t) {
  let n, r, s, a;
  const o = [], h = [];
  if (e !== null) for (r = 0; r < e.length; r += 2) t[(r >>> 1) % 5][(r >>> 1) / 5 | 0] = z(t[(r >>> 1) % 5][(r >>> 1) / 5 | 0], new i(e[r + 1], e[r]));
  for (n = 0; n < 24; n += 1) {
    for (a = yt(), r = 0; r < 5; r += 1) o[r] = (c = t[r][0], l = t[r][1], d = t[r][2], u = t[r][3], f = t[r][4], new i(c.N ^ l.N ^ d.N ^ u.N ^ f.N, c.I ^ l.I ^ d.I ^ u.I ^ f.I));
    for (r = 0; r < 5; r += 1) h[r] = z(o[(r + 4) % 5], Et(o[(r + 1) % 5], 1));
    for (r = 0; r < 5; r += 1) for (s = 0; s < 5; s += 1) t[r][s] = z(t[r][s], h[r]);
    for (r = 0; r < 5; r += 1) for (s = 0; s < 5; s += 1) a[s][(2 * r + 3 * s) % 5] = Et(t[r][s], Se[r][s]);
    for (r = 0; r < 5; r += 1) for (s = 0; s < 5; s += 1) t[r][s] = z(a[r][s], new i(~a[(r + 1) % 5][s].N & a[(r + 2) % 5][s].N, ~a[(r + 1) % 5][s].I & a[(r + 2) % 5][s].I));
    t[0][0] = z(t[0][0], ve[n]);
  }
  var c, l, d, u, f;
  return t;
}
function Gt(e) {
  let t, n, r = 0;
  const s = [0, 0], a = [4294967295 & e, e / at & 2097151];
  for (t = 6; t >= 0; t--) n = a[t >> 2] >>> 8 * t & 255, n === 0 && r === 0 || (s[r + 1 >> 2] |= n << 8 * (r + 1), r += 1);
  return r = r !== 0 ? r : 1, s[0] |= r, { value: r + 1 > 4 ? s : [s[0]], binLen: 8 + 8 * r };
}
function mt(e) {
  return ht(Gt(e.binLen), e);
}
function Pt(e, t) {
  let n, r = Gt(t);
  r = ht(r, e);
  const s = t >>> 2, a = (s - r.value.length % s) % s;
  for (n = 0; n < a; n++) r.value.push(0);
  return r.value;
}
let Ne = class extends ft {
  constructor(e, t, n) {
    let r = 6, s = 0;
    super(e, t, n);
    const a = n || {};
    if (this.numRounds !== 1) {
      if (a.kmacKey || a.hmacKey) throw new Error(Ut);
      if (this.o === "CSHAKE128" || this.o === "CSHAKE256") throw new Error("Cannot set numRounds for CSHAKE variants");
    }
    switch (this.T = 1, this.C = J(this.t, this.i, this.T), this.v = ot, this.L = Ae, this.B = yt, this.U = yt(), this.K = !1, e) {
      case "SHA3-224":
        this.m = s = 1152, this.R = 224, this.M = !0, this.g = this.Y;
        break;
      case "SHA3-256":
        this.m = s = 1088, this.R = 256, this.M = !0, this.g = this.Y;
        break;
      case "SHA3-384":
        this.m = s = 832, this.R = 384, this.M = !0, this.g = this.Y;
        break;
      case "SHA3-512":
        this.m = s = 576, this.R = 512, this.M = !0, this.g = this.Y;
        break;
      case "SHAKE128":
        r = 31, this.m = s = 1344, this.R = -1, this.K = !0, this.M = !1, this.g = null;
        break;
      case "SHAKE256":
        r = 31, this.m = s = 1088, this.R = -1, this.K = !0, this.M = !1, this.g = null;
        break;
      case "KMAC128":
        r = 4, this.m = s = 1344, this.X(n), this.R = -1, this.K = !0, this.M = !1, this.g = this._;
        break;
      case "KMAC256":
        r = 4, this.m = s = 1088, this.X(n), this.R = -1, this.K = !0, this.M = !1, this.g = this._;
        break;
      case "CSHAKE128":
        this.m = s = 1344, r = this.O(n), this.R = -1, this.K = !0, this.M = !1, this.g = null;
        break;
      case "CSHAKE256":
        this.m = s = 1088, r = this.O(n), this.R = -1, this.K = !0, this.M = !1, this.g = null;
        break;
      default:
        throw new Error(it);
    }
    this.F = function(o, h, c, l, d) {
      return function(u, f, g, w, y, p, N) {
        let A, E, x = 0;
        const O = [], C = y >>> 5, X = f >>> 5;
        for (A = 0; A < X && f >= y; A += C) w = ot(u.slice(A, A + C), w), f -= y;
        for (u = u.slice(A), f %= y; u.length < C; ) u.push(0);
        for (A = f >>> 3, u[A >> 2] ^= p << A % 4 * 8, u[C - 1] ^= 2147483648, w = ot(u, w); 32 * O.length < N && (E = w[x % 5][x / 5 | 0], O.push(E.I), !(32 * O.length >= N)); ) O.push(E.N), x += 1, 64 * x % y == 0 && (ot(null, w), x = 0);
        return O;
      }(o, h, 0, l, s, r, d);
    }, a.hmacKey && this.k(W("hmacKey", a.hmacKey, this.T));
  }
  O(e, t) {
    const n = function(s) {
      const a = s || {};
      return { funcName: W("funcName", a.funcName, 1, { value: [], binLen: 0 }), customization: W("Customization", a.customization, 1, { value: [], binLen: 0 }) };
    }(e || {});
    t && (n.funcName = t);
    const r = ht(mt(n.funcName), mt(n.customization));
    if (n.customization.binLen !== 0 || n.funcName.binLen !== 0) {
      const s = Pt(r, this.m >>> 3);
      for (let a = 0; a < s.length; a += this.m >>> 5) this.U = this.v(s.slice(a, a + (this.m >>> 5)), this.U), this.A += this.m;
      return 4;
    }
    return 31;
  }
  X(e) {
    const t = function(r) {
      const s = r || {};
      return { kmacKey: W("kmacKey", s.kmacKey, 1), funcName: { value: [1128353099], binLen: 32 }, customization: W("Customization", s.customization, 1, { value: [], binLen: 0 }) };
    }(e || {});
    this.O(e, t.funcName);
    const n = Pt(mt(t.kmacKey), this.m >>> 3);
    for (let r = 0; r < n.length; r += this.m >>> 5) this.U = this.v(n.slice(r, r + (this.m >>> 5)), this.U), this.A += this.m;
    this.H = !0;
  }
  _(e) {
    const t = ht({ value: this.h.slice(), binLen: this.u }, function(n) {
      let r, s, a = 0;
      const o = [0, 0], h = [4294967295 & n, n / at & 2097151];
      for (r = 6; r >= 0; r--) s = h[r >> 2] >>> 8 * r & 255, s === 0 && a === 0 || (o[a >> 2] |= s << 8 * a, a += 1);
      return a = a !== 0 ? a : 1, o[a >> 2] |= a << 8 * a, { value: a + 1 > 4 ? o : [o[0]], binLen: 8 + 8 * a };
    }(e.outputLen));
    return this.F(t.value, t.binLen, this.A, this.L(this.U), e.outputLen);
  }
};
class xe {
  constructor(t, n, r) {
    if (t == "SHA-1") this.P = new ce(t, n, r);
    else if (t == "SHA-224" || t == "SHA-256") this.P = new he(t, n, r);
    else if (t == "SHA-384" || t == "SHA-512") this.P = new be(t, n, r);
    else {
      if (t != "SHA3-224" && t != "SHA3-256" && t != "SHA3-384" && t != "SHA3-512" && t != "SHAKE128" && t != "SHAKE256" && t != "CSHAKE128" && t != "CSHAKE256" && t != "KMAC128" && t != "KMAC256") throw new Error(it);
      this.P = new Ne(t, n, r);
    }
  }
  update(t) {
    return this.P.update(t), this;
  }
  getHash(t, n) {
    return this.P.getHash(t, n);
  }
  setHMACKey(t, n, r) {
    this.P.setHMACKey(t, n, r);
  }
  getHMAC(t, n) {
    return this.P.getHMAC(t, n);
  }
}
function Te(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Qt = { exports: {} }, S = Qt.exports = {}, D, k;
function pt() {
  throw new Error("setTimeout has not been defined");
}
function bt() {
  throw new Error("clearTimeout has not been defined");
}
(function() {
  try {
    typeof setTimeout == "function" ? D = setTimeout : D = pt;
  } catch {
    D = pt;
  }
  try {
    typeof clearTimeout == "function" ? k = clearTimeout : k = bt;
  } catch {
    k = bt;
  }
})();
function $t(e) {
  if (D === setTimeout)
    return setTimeout(e, 0);
  if ((D === pt || !D) && setTimeout)
    return D = setTimeout, setTimeout(e, 0);
  try {
    return D(e, 0);
  } catch {
    try {
      return D.call(null, e, 0);
    } catch {
      return D.call(this, e, 0);
    }
  }
}
function Ee(e) {
  if (k === clearTimeout)
    return clearTimeout(e);
  if ((k === bt || !k) && clearTimeout)
    return k = clearTimeout, clearTimeout(e);
  try {
    return k(e);
  } catch {
    try {
      return k.call(null, e);
    } catch {
      return k.call(this, e);
    }
  }
}
var Y = [], $ = !1, j, ct = -1;
function Me() {
  !$ || !j || ($ = !1, j.length ? Y = j.concat(Y) : ct = -1, Y.length && Vt());
}
function Vt() {
  if (!$) {
    var e = $t(Me);
    $ = !0;
    for (var t = Y.length; t; ) {
      for (j = Y, Y = []; ++ct < t; )
        j && j[ct].run();
      ct = -1, t = Y.length;
    }
    j = null, $ = !1, Ee(e);
  }
}
S.nextTick = function(e) {
  var t = new Array(arguments.length - 1);
  if (arguments.length > 1)
    for (var n = 1; n < arguments.length; n++)
      t[n - 1] = arguments[n];
  Y.push(new Jt(e, t)), Y.length === 1 && !$ && $t(Vt);
};
function Jt(e, t) {
  this.fun = e, this.array = t;
}
Jt.prototype.run = function() {
  this.fun.apply(null, this.array);
};
S.title = "browser";
S.browser = !0;
S.env = {};
S.argv = [];
S.version = "";
S.versions = {};
function q() {
}
S.on = q;
S.addListener = q;
S.once = q;
S.off = q;
S.removeListener = q;
S.removeAllListeners = q;
S.emit = q;
S.prependListener = q;
S.prependOnceListener = q;
S.listeners = function(e) {
  return [];
};
S.binding = function(e) {
  throw new Error("process.binding is not supported");
};
S.cwd = function() {
  return "/";
};
S.chdir = function(e) {
  throw new Error("process.chdir is not supported");
};
S.umask = function() {
  return 0;
};
var Oe = Qt.exports;
const V = /* @__PURE__ */ Te(Oe);
var Pe = typeof window < "u" && typeof window.document < "u";
// @ts-expect-error
typeof V < "u" && // @ts-expect-error
V.versions != null && // @ts-expect-error
V.versions.node != null;
typeof window < "u" && window.name === "nodejs" || typeof navigator < "u" && "userAgent" in navigator && typeof navigator.userAgent == "string" && (navigator.userAgent.includes("Node.js") || navigator.userAgent.includes("jsdom"));
// @ts-expect-error
typeof Deno < "u" && // @ts-expect-error
typeof Deno.version < "u" && // @ts-expect-error
typeof Deno.version.deno < "u";
typeof V < "u" && V.versions != null && V.versions.bun != null;
var I = /* @__PURE__ */ ((e) => (e[e.InvalidCountryCode = 201] = "InvalidCountryCode", e[e.InvalidRecipientNumber = 202] = "InvalidRecipientNumber", e[e.MissingAuthentication = 300] = "MissingAuthentication", e[e.MissingParameterTo = 301] = "MissingParameterTo", e[e.MissingParameterType = 304] = "MissingParameterType", e[e.MissingParameterText = 305] = "MissingParameterText", e[e.InvalidSender = 306] = "InvalidSender", e[e.MissingParameterUrl = 307] = "MissingParameterUrl", e[e.InvalidType = 400] = "InvalidType", e[e.ParameterLongExceedsCharLimit = 401] = "ParameterLongExceedsCharLimit", e[e.PreventedByReloadLock = 402] = "PreventedByReloadLock", e[e.DailyLimitReachedForNumber = 403] = "DailyLimitReachedForNumber", e[e.InsufficientCredits = 500] = "InsufficientCredits", e[e.CarrierFailed = 600] = "CarrierFailed", e[e.UnknownError = 700] = "UnknownError", e[e.MissingLogoFile = 801] = "MissingLogoFile", e[e.NonExistingLogoFile = 802] = "NonExistingLogoFile", e[e.MissingRingTone = 803] = "MissingRingTone", e[e.InvalidApiKey = 900] = "InvalidApiKey", e[e.InvalidMessageId = 901] = "InvalidMessageId", e[e.DeactivatedApi = 902] = "DeactivatedApi", e[e.DisallowedIp = 903] = "DisallowedIp", e))(I || {});
class Ie {
  static uuid(t = 32) {
    return [...Array(t)].map(() => Math.random().toString(36)[2]).join("");
  }
}
class rt {
  constructor(t) {
    this.options = t;
  }
  static BASE_URL = "https://gateway.seven.io/api";
  static CONTENT_TYPE_URLENCODED = "application/x-www-form-urlencoded";
  request = async (t, n, r, s = "application/json") => {
    let a = `${rt.BASE_URL}/${n}`;
    const o = {
      Accept: "application/json",
      "Content-Type": s,
      SentWith: this.options.sentWith ?? "js"
    };
    this.options.apiKey.startsWith("Bearer ") ? o.Authorization = this.options.apiKey : o["X-Api-Key"] = this.options.apiKey;
    const h = {
      method: t
    }, c = s === rt.CONTENT_TYPE_URLENCODED, l = new URLSearchParams();
    if (r && Object.keys(r).length)
      switch (Object.entries(r).forEach(([w, y]) => {
        Array.isArray(y) ? y.forEach((p) => l.append(w, p)) : l.set(w, y);
      }), t) {
        case "get":
          a += `?${l.toString()}`;
          break;
        default:
          h.body = c ? l.toString() : JSON.stringify(r);
      }
    if (this.options.signingSecret) {
      const w = () => Object.keys(r).length ? c ? l.toString() : t === "get" ? "" : JSON.stringify(r) : "", y = Number.parseInt((Date.now() / 1e3).toString()), p = Ie.uuid(32), N = t.toUpperCase(), A = w();
      let E;
      if (Pe) {
        const { md5: C } = await import("./md5-DcAGnr4i.js").then((X) => X.m);
        E = C(A);
      } else {
        const { createHash: C } = await import("./index-DLf82BCL.js").then((ne) => ne.i), X = C("md5");
        X.update(A), E = X.digest("hex");
      }
      const x = [y, p, N, a, E].join(`
`), O = new xe("SHA-256", "TEXT", {
        hmacKey: {
          format: "TEXT",
          value: this.options.signingSecret
        }
      }).update(x).getHash("HEX");
      o["X-Nonce"] = p, o["X-Signature"] = O, o["X-Timestamp"] = y.toString();
    }
    const d = await fetch(a, { ...h, headers: o });
    let u = await d.text(), f = null;
    try {
      u = JSON.parse(u);
    } catch {
    }
    const g = typeof u;
    if (g === "string" || g === "number") {
      const w = Number.parseFloat(`${u}`);
      Number.isInteger(w) && (f = w);
    }
    if (this.options.debug && console.debug({
      request: {
        ...h,
        body: h.body instanceof URLSearchParams ? Object.fromEntries(h.body) : h.body,
        url: a
      },
      response: {
        apiCode: f,
        body: u,
        headers: Object.fromEntries(d.headers),
        status: d.status
      }
    }), f && f in I) throw new Error(`${f}: ${I[f]}`);
    return u;
  };
}
class M {
  constructor(t) {
    this.client = t;
  }
}
const zt = 6048e5, Re = 864e5, It = Symbol.for("constructDateFrom");
function K(e, t) {
  return typeof e == "function" ? e(t) : e && typeof e == "object" && It in e ? e[It](t) : e instanceof Date ? new e.constructor(t) : new Date(t);
}
function R(e, t) {
  return K(t || e, e);
}
let De = {};
function dt() {
  return De;
}
function st(e, t) {
  const n = dt(), r = t?.weekStartsOn ?? t?.locale?.options?.weekStartsOn ?? n.weekStartsOn ?? n.locale?.options?.weekStartsOn ?? 0, s = R(e, t?.in), a = s.getDay(), o = (a < r ? 7 : 0) + a - r;
  return s.setDate(s.getDate() - o), s.setHours(0, 0, 0, 0), s;
}
function lt(e, t) {
  return st(e, { ...t, weekStartsOn: 1 });
}
function Zt(e, t) {
  const n = R(e, t?.in), r = n.getFullYear(), s = K(n, 0);
  s.setFullYear(r + 1, 0, 4), s.setHours(0, 0, 0, 0);
  const a = lt(s), o = K(n, 0);
  o.setFullYear(r, 0, 4), o.setHours(0, 0, 0, 0);
  const h = lt(o);
  return n.getTime() >= a.getTime() ? r + 1 : n.getTime() >= h.getTime() ? r : r - 1;
}
function Rt(e) {
  const t = R(e), n = new Date(
    Date.UTC(
      t.getFullYear(),
      t.getMonth(),
      t.getDate(),
      t.getHours(),
      t.getMinutes(),
      t.getSeconds(),
      t.getMilliseconds()
    )
  );
  return n.setUTCFullYear(t.getFullYear()), +e - +n;
}
function ke(e, ...t) {
  const n = K.bind(
    null,
    t.find((r) => typeof r == "object")
  );
  return t.map(n);
}
function Dt(e, t) {
  const n = R(e, t?.in);
  return n.setHours(0, 0, 0, 0), n;
}
function Le(e, t, n) {
  const [r, s] = ke(
    n?.in,
    e,
    t
  ), a = Dt(r), o = Dt(s), h = +a - Rt(a), c = +o - Rt(o);
  return Math.round((h - c) / Re);
}
function He(e, t) {
  const n = Zt(e, t), r = K(e, 0);
  return r.setFullYear(n, 0, 4), r.setHours(0, 0, 0, 0), lt(r);
}
function _e(e) {
  return e instanceof Date || typeof e == "object" && Object.prototype.toString.call(e) === "[object Date]";
}
function Fe(e) {
  return !(!_e(e) && typeof e != "number" || isNaN(+R(e)));
}
function Ye(e, t) {
  const n = R(e, t?.in);
  return n.setFullYear(n.getFullYear(), 0, 1), n.setHours(0, 0, 0, 0), n;
}
const qe = {
  lessThanXSeconds: {
    one: "less than a second",
    other: "less than {{count}} seconds"
  },
  xSeconds: {
    one: "1 second",
    other: "{{count}} seconds"
  },
  halfAMinute: "half a minute",
  lessThanXMinutes: {
    one: "less than a minute",
    other: "less than {{count}} minutes"
  },
  xMinutes: {
    one: "1 minute",
    other: "{{count}} minutes"
  },
  aboutXHours: {
    one: "about 1 hour",
    other: "about {{count}} hours"
  },
  xHours: {
    one: "1 hour",
    other: "{{count}} hours"
  },
  xDays: {
    one: "1 day",
    other: "{{count}} days"
  },
  aboutXWeeks: {
    one: "about 1 week",
    other: "about {{count}} weeks"
  },
  xWeeks: {
    one: "1 week",
    other: "{{count}} weeks"
  },
  aboutXMonths: {
    one: "about 1 month",
    other: "about {{count}} months"
  },
  xMonths: {
    one: "1 month",
    other: "{{count}} months"
  },
  aboutXYears: {
    one: "about 1 year",
    other: "about {{count}} years"
  },
  xYears: {
    one: "1 year",
    other: "{{count}} years"
  },
  overXYears: {
    one: "over 1 year",
    other: "over {{count}} years"
  },
  almostXYears: {
    one: "almost 1 year",
    other: "almost {{count}} years"
  }
}, Ce = (e, t, n) => {
  let r;
  const s = qe[e];
  return typeof s == "string" ? r = s : t === 1 ? r = s.one : r = s.other.replace("{{count}}", t.toString()), n?.addSuffix ? n.comparison && n.comparison > 0 ? "in " + r : r + " ago" : r;
};
function wt(e) {
  return (t = {}) => {
    const n = t.width ? String(t.width) : e.defaultWidth;
    return e.formats[n] || e.formats[e.defaultWidth];
  };
}
const Ue = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy"
}, We = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a"
}, Ke = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}"
}, Be = {
  date: wt({
    formats: Ue,
    defaultWidth: "full"
  }),
  time: wt({
    formats: We,
    defaultWidth: "full"
  }),
  dateTime: wt({
    formats: Ke,
    defaultWidth: "full"
  })
}, je = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: "P"
}, Xe = (e, t, n, r) => je[e];
function Z(e) {
  return (t, n) => {
    const r = n?.context ? String(n.context) : "standalone";
    let s;
    if (r === "formatting" && e.formattingValues) {
      const o = e.defaultFormattingWidth || e.defaultWidth, h = n?.width ? String(n.width) : o;
      s = e.formattingValues[h] || e.formattingValues[o];
    } else {
      const o = e.defaultWidth, h = n?.width ? String(n.width) : e.defaultWidth;
      s = e.values[h] || e.values[o];
    }
    const a = e.argumentCallback ? e.argumentCallback(t) : t;
    return s[a];
  };
}
const Ge = {
  narrow: ["B", "A"],
  abbreviated: ["BC", "AD"],
  wide: ["Before Christ", "Anno Domini"]
}, Qe = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
}, $e = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: [
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec"
  ],
  wide: [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December"
  ]
}, Ve = {
  narrow: ["S", "M", "T", "W", "T", "F", "S"],
  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  wide: [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday"
  ]
}, Je = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  }
}, ze = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  }
}, Ze = (e, t) => {
  const n = Number(e), r = n % 100;
  if (r > 20 || r < 10)
    switch (r % 10) {
      case 1:
        return n + "st";
      case 2:
        return n + "nd";
      case 3:
        return n + "rd";
    }
  return n + "th";
}, tn = {
  ordinalNumber: Ze,
  era: Z({
    values: Ge,
    defaultWidth: "wide"
  }),
  quarter: Z({
    values: Qe,
    defaultWidth: "wide",
    argumentCallback: (e) => e - 1
  }),
  month: Z({
    values: $e,
    defaultWidth: "wide"
  }),
  day: Z({
    values: Ve,
    defaultWidth: "wide"
  }),
  dayPeriod: Z({
    values: Je,
    defaultWidth: "wide",
    formattingValues: ze,
    defaultFormattingWidth: "wide"
  })
};
function tt(e) {
  return (t, n = {}) => {
    const r = n.width, s = r && e.matchPatterns[r] || e.matchPatterns[e.defaultMatchWidth], a = t.match(s);
    if (!a)
      return null;
    const o = a[0], h = r && e.parsePatterns[r] || e.parsePatterns[e.defaultParseWidth], c = Array.isArray(h) ? nn(h, (u) => u.test(o)) : (
      // [TODO] -- I challenge you to fix the type
      en(h, (u) => u.test(o))
    );
    let l;
    l = e.valueCallback ? e.valueCallback(c) : c, l = n.valueCallback ? (
      // [TODO] -- I challenge you to fix the type
      n.valueCallback(l)
    ) : l;
    const d = t.slice(o.length);
    return { value: l, rest: d };
  };
}
function en(e, t) {
  for (const n in e)
    if (Object.prototype.hasOwnProperty.call(e, n) && t(e[n]))
      return n;
}
function nn(e, t) {
  for (let n = 0; n < e.length; n++)
    if (t(e[n]))
      return n;
}
function rn(e) {
  return (t, n = {}) => {
    const r = t.match(e.matchPattern);
    if (!r) return null;
    const s = r[0], a = t.match(e.parsePattern);
    if (!a) return null;
    let o = e.valueCallback ? e.valueCallback(a[0]) : a[0];
    o = n.valueCallback ? n.valueCallback(o) : o;
    const h = t.slice(s.length);
    return { value: o, rest: h };
  };
}
const sn = /^(\d+)(th|st|nd|rd)?/i, an = /\d+/i, on = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
}, un = {
  any: [/^b/i, /^(a|c)/i]
}, cn = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
}, hn = {
  any: [/1/i, /2/i, /3/i, /4/i]
}, ln = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
}, fn = {
  narrow: [
    /^j/i,
    /^f/i,
    /^m/i,
    /^a/i,
    /^m/i,
    /^j/i,
    /^j/i,
    /^a/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i
  ],
  any: [
    /^ja/i,
    /^f/i,
    /^mar/i,
    /^ap/i,
    /^may/i,
    /^jun/i,
    /^jul/i,
    /^au/i,
    /^s/i,
    /^o/i,
    /^n/i,
    /^d/i
  ]
}, dn = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
}, mn = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
}, wn = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
}, gn = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
}, yn = {
  ordinalNumber: rn({
    matchPattern: sn,
    parsePattern: an,
    valueCallback: (e) => parseInt(e, 10)
  }),
  era: tt({
    matchPatterns: on,
    defaultMatchWidth: "wide",
    parsePatterns: un,
    defaultParseWidth: "any"
  }),
  quarter: tt({
    matchPatterns: cn,
    defaultMatchWidth: "wide",
    parsePatterns: hn,
    defaultParseWidth: "any",
    valueCallback: (e) => e + 1
  }),
  month: tt({
    matchPatterns: ln,
    defaultMatchWidth: "wide",
    parsePatterns: fn,
    defaultParseWidth: "any"
  }),
  day: tt({
    matchPatterns: dn,
    defaultMatchWidth: "wide",
    parsePatterns: mn,
    defaultParseWidth: "any"
  }),
  dayPeriod: tt({
    matchPatterns: wn,
    defaultMatchWidth: "any",
    parsePatterns: gn,
    defaultParseWidth: "any"
  })
}, pn = {
  code: "en-US",
  formatDistance: Ce,
  formatLong: Be,
  formatRelative: Xe,
  localize: tn,
  match: yn,
  options: {
    weekStartsOn: 0,
    firstWeekContainsDate: 1
  }
};
function bn(e, t) {
  const n = R(e, t?.in);
  return Le(n, Ye(n)) + 1;
}
function vn(e, t) {
  const n = R(e, t?.in), r = +lt(n) - +He(n);
  return Math.round(r / zt) + 1;
}
function te(e, t) {
  const n = R(e, t?.in), r = n.getFullYear(), s = dt(), a = t?.firstWeekContainsDate ?? t?.locale?.options?.firstWeekContainsDate ?? s.firstWeekContainsDate ?? s.locale?.options?.firstWeekContainsDate ?? 1, o = K(t?.in || e, 0);
  o.setFullYear(r + 1, 0, a), o.setHours(0, 0, 0, 0);
  const h = st(o, t), c = K(t?.in || e, 0);
  c.setFullYear(r, 0, a), c.setHours(0, 0, 0, 0);
  const l = st(c, t);
  return +n >= +h ? r + 1 : +n >= +l ? r : r - 1;
}
function Sn(e, t) {
  const n = dt(), r = t?.firstWeekContainsDate ?? t?.locale?.options?.firstWeekContainsDate ?? n.firstWeekContainsDate ?? n.locale?.options?.firstWeekContainsDate ?? 1, s = te(e, t), a = K(t?.in || e, 0);
  return a.setFullYear(s, 0, r), a.setHours(0, 0, 0, 0), st(a, t);
}
function An(e, t) {
  const n = R(e, t?.in), r = +st(n, t) - +Sn(n, t);
  return Math.round(r / zt) + 1;
}
function v(e, t) {
  const n = e < 0 ? "-" : "", r = Math.abs(e).toString().padStart(t, "0");
  return n + r;
}
const U = {
  // Year
  y(e, t) {
    const n = e.getFullYear(), r = n > 0 ? n : 1 - n;
    return v(t === "yy" ? r % 100 : r, t.length);
  },
  // Month
  M(e, t) {
    const n = e.getMonth();
    return t === "M" ? String(n + 1) : v(n + 1, 2);
  },
  // Day of the month
  d(e, t) {
    return v(e.getDate(), t.length);
  },
  // AM or PM
  a(e, t) {
    const n = e.getHours() / 12 >= 1 ? "pm" : "am";
    switch (t) {
      case "a":
      case "aa":
        return n.toUpperCase();
      case "aaa":
        return n;
      case "aaaaa":
        return n[0];
      case "aaaa":
      default:
        return n === "am" ? "a.m." : "p.m.";
    }
  },
  // Hour [1-12]
  h(e, t) {
    return v(e.getHours() % 12 || 12, t.length);
  },
  // Hour [0-23]
  H(e, t) {
    return v(e.getHours(), t.length);
  },
  // Minute
  m(e, t) {
    return v(e.getMinutes(), t.length);
  },
  // Second
  s(e, t) {
    return v(e.getSeconds(), t.length);
  },
  // Fraction of second
  S(e, t) {
    const n = t.length, r = e.getMilliseconds(), s = Math.trunc(
      r * Math.pow(10, n - 3)
    );
    return v(s, t.length);
  }
}, Q = {
  midnight: "midnight",
  noon: "noon",
  morning: "morning",
  afternoon: "afternoon",
  evening: "evening",
  night: "night"
}, kt = {
  // Era
  G: function(e, t, n) {
    const r = e.getFullYear() > 0 ? 1 : 0;
    switch (t) {
      // AD, BC
      case "G":
      case "GG":
      case "GGG":
        return n.era(r, { width: "abbreviated" });
      // A, B
      case "GGGGG":
        return n.era(r, { width: "narrow" });
      // Anno Domini, Before Christ
      case "GGGG":
      default:
        return n.era(r, { width: "wide" });
    }
  },
  // Year
  y: function(e, t, n) {
    if (t === "yo") {
      const r = e.getFullYear(), s = r > 0 ? r : 1 - r;
      return n.ordinalNumber(s, { unit: "year" });
    }
    return U.y(e, t);
  },
  // Local week-numbering year
  Y: function(e, t, n, r) {
    const s = te(e, r), a = s > 0 ? s : 1 - s;
    if (t === "YY") {
      const o = a % 100;
      return v(o, 2);
    }
    return t === "Yo" ? n.ordinalNumber(a, { unit: "year" }) : v(a, t.length);
  },
  // ISO week-numbering year
  R: function(e, t) {
    const n = Zt(e);
    return v(n, t.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function(e, t) {
    const n = e.getFullYear();
    return v(n, t.length);
  },
  // Quarter
  Q: function(e, t, n) {
    const r = Math.ceil((e.getMonth() + 1) / 3);
    switch (t) {
      // 1, 2, 3, 4
      case "Q":
        return String(r);
      // 01, 02, 03, 04
      case "QQ":
        return v(r, 2);
      // 1st, 2nd, 3rd, 4th
      case "Qo":
        return n.ordinalNumber(r, { unit: "quarter" });
      // Q1, Q2, Q3, Q4
      case "QQQ":
        return n.quarter(r, {
          width: "abbreviated",
          context: "formatting"
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case "QQQQQ":
        return n.quarter(r, {
          width: "narrow",
          context: "formatting"
        });
      // 1st quarter, 2nd quarter, ...
      case "QQQQ":
      default:
        return n.quarter(r, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone quarter
  q: function(e, t, n) {
    const r = Math.ceil((e.getMonth() + 1) / 3);
    switch (t) {
      // 1, 2, 3, 4
      case "q":
        return String(r);
      // 01, 02, 03, 04
      case "qq":
        return v(r, 2);
      // 1st, 2nd, 3rd, 4th
      case "qo":
        return n.ordinalNumber(r, { unit: "quarter" });
      // Q1, Q2, Q3, Q4
      case "qqq":
        return n.quarter(r, {
          width: "abbreviated",
          context: "standalone"
        });
      // 1, 2, 3, 4 (narrow quarter; could be not numerical)
      case "qqqqq":
        return n.quarter(r, {
          width: "narrow",
          context: "standalone"
        });
      // 1st quarter, 2nd quarter, ...
      case "qqqq":
      default:
        return n.quarter(r, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // Month
  M: function(e, t, n) {
    const r = e.getMonth();
    switch (t) {
      case "M":
      case "MM":
        return U.M(e, t);
      // 1st, 2nd, ..., 12th
      case "Mo":
        return n.ordinalNumber(r + 1, { unit: "month" });
      // Jan, Feb, ..., Dec
      case "MMM":
        return n.month(r, {
          width: "abbreviated",
          context: "formatting"
        });
      // J, F, ..., D
      case "MMMMM":
        return n.month(r, {
          width: "narrow",
          context: "formatting"
        });
      // January, February, ..., December
      case "MMMM":
      default:
        return n.month(r, { width: "wide", context: "formatting" });
    }
  },
  // Stand-alone month
  L: function(e, t, n) {
    const r = e.getMonth();
    switch (t) {
      // 1, 2, ..., 12
      case "L":
        return String(r + 1);
      // 01, 02, ..., 12
      case "LL":
        return v(r + 1, 2);
      // 1st, 2nd, ..., 12th
      case "Lo":
        return n.ordinalNumber(r + 1, { unit: "month" });
      // Jan, Feb, ..., Dec
      case "LLL":
        return n.month(r, {
          width: "abbreviated",
          context: "standalone"
        });
      // J, F, ..., D
      case "LLLLL":
        return n.month(r, {
          width: "narrow",
          context: "standalone"
        });
      // January, February, ..., December
      case "LLLL":
      default:
        return n.month(r, { width: "wide", context: "standalone" });
    }
  },
  // Local week of year
  w: function(e, t, n, r) {
    const s = An(e, r);
    return t === "wo" ? n.ordinalNumber(s, { unit: "week" }) : v(s, t.length);
  },
  // ISO week of year
  I: function(e, t, n) {
    const r = vn(e);
    return t === "Io" ? n.ordinalNumber(r, { unit: "week" }) : v(r, t.length);
  },
  // Day of the month
  d: function(e, t, n) {
    return t === "do" ? n.ordinalNumber(e.getDate(), { unit: "date" }) : U.d(e, t);
  },
  // Day of year
  D: function(e, t, n) {
    const r = bn(e);
    return t === "Do" ? n.ordinalNumber(r, { unit: "dayOfYear" }) : v(r, t.length);
  },
  // Day of week
  E: function(e, t, n) {
    const r = e.getDay();
    switch (t) {
      // Tue
      case "E":
      case "EE":
      case "EEE":
        return n.day(r, {
          width: "abbreviated",
          context: "formatting"
        });
      // T
      case "EEEEE":
        return n.day(r, {
          width: "narrow",
          context: "formatting"
        });
      // Tu
      case "EEEEEE":
        return n.day(r, {
          width: "short",
          context: "formatting"
        });
      // Tuesday
      case "EEEE":
      default:
        return n.day(r, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Local day of week
  e: function(e, t, n, r) {
    const s = e.getDay(), a = (s - r.weekStartsOn + 8) % 7 || 7;
    switch (t) {
      // Numerical value (Nth day of week with current locale or weekStartsOn)
      case "e":
        return String(a);
      // Padded numerical value
      case "ee":
        return v(a, 2);
      // 1st, 2nd, ..., 7th
      case "eo":
        return n.ordinalNumber(a, { unit: "day" });
      case "eee":
        return n.day(s, {
          width: "abbreviated",
          context: "formatting"
        });
      // T
      case "eeeee":
        return n.day(s, {
          width: "narrow",
          context: "formatting"
        });
      // Tu
      case "eeeeee":
        return n.day(s, {
          width: "short",
          context: "formatting"
        });
      // Tuesday
      case "eeee":
      default:
        return n.day(s, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone local day of week
  c: function(e, t, n, r) {
    const s = e.getDay(), a = (s - r.weekStartsOn + 8) % 7 || 7;
    switch (t) {
      // Numerical value (same as in `e`)
      case "c":
        return String(a);
      // Padded numerical value
      case "cc":
        return v(a, t.length);
      // 1st, 2nd, ..., 7th
      case "co":
        return n.ordinalNumber(a, { unit: "day" });
      case "ccc":
        return n.day(s, {
          width: "abbreviated",
          context: "standalone"
        });
      // T
      case "ccccc":
        return n.day(s, {
          width: "narrow",
          context: "standalone"
        });
      // Tu
      case "cccccc":
        return n.day(s, {
          width: "short",
          context: "standalone"
        });
      // Tuesday
      case "cccc":
      default:
        return n.day(s, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // ISO day of week
  i: function(e, t, n) {
    const r = e.getDay(), s = r === 0 ? 7 : r;
    switch (t) {
      // 2
      case "i":
        return String(s);
      // 02
      case "ii":
        return v(s, t.length);
      // 2nd
      case "io":
        return n.ordinalNumber(s, { unit: "day" });
      // Tue
      case "iii":
        return n.day(r, {
          width: "abbreviated",
          context: "formatting"
        });
      // T
      case "iiiii":
        return n.day(r, {
          width: "narrow",
          context: "formatting"
        });
      // Tu
      case "iiiiii":
        return n.day(r, {
          width: "short",
          context: "formatting"
        });
      // Tuesday
      case "iiii":
      default:
        return n.day(r, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // AM or PM
  a: function(e, t, n) {
    const s = e.getHours() / 12 >= 1 ? "pm" : "am";
    switch (t) {
      case "a":
      case "aa":
        return n.dayPeriod(s, {
          width: "abbreviated",
          context: "formatting"
        });
      case "aaa":
        return n.dayPeriod(s, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "aaaaa":
        return n.dayPeriod(s, {
          width: "narrow",
          context: "formatting"
        });
      case "aaaa":
      default:
        return n.dayPeriod(s, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // AM, PM, midnight, noon
  b: function(e, t, n) {
    const r = e.getHours();
    let s;
    switch (r === 12 ? s = Q.noon : r === 0 ? s = Q.midnight : s = r / 12 >= 1 ? "pm" : "am", t) {
      case "b":
      case "bb":
        return n.dayPeriod(s, {
          width: "abbreviated",
          context: "formatting"
        });
      case "bbb":
        return n.dayPeriod(s, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "bbbbb":
        return n.dayPeriod(s, {
          width: "narrow",
          context: "formatting"
        });
      case "bbbb":
      default:
        return n.dayPeriod(s, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function(e, t, n) {
    const r = e.getHours();
    let s;
    switch (r >= 17 ? s = Q.evening : r >= 12 ? s = Q.afternoon : r >= 4 ? s = Q.morning : s = Q.night, t) {
      case "B":
      case "BB":
      case "BBB":
        return n.dayPeriod(s, {
          width: "abbreviated",
          context: "formatting"
        });
      case "BBBBB":
        return n.dayPeriod(s, {
          width: "narrow",
          context: "formatting"
        });
      case "BBBB":
      default:
        return n.dayPeriod(s, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Hour [1-12]
  h: function(e, t, n) {
    if (t === "ho") {
      let r = e.getHours() % 12;
      return r === 0 && (r = 12), n.ordinalNumber(r, { unit: "hour" });
    }
    return U.h(e, t);
  },
  // Hour [0-23]
  H: function(e, t, n) {
    return t === "Ho" ? n.ordinalNumber(e.getHours(), { unit: "hour" }) : U.H(e, t);
  },
  // Hour [0-11]
  K: function(e, t, n) {
    const r = e.getHours() % 12;
    return t === "Ko" ? n.ordinalNumber(r, { unit: "hour" }) : v(r, t.length);
  },
  // Hour [1-24]
  k: function(e, t, n) {
    let r = e.getHours();
    return r === 0 && (r = 24), t === "ko" ? n.ordinalNumber(r, { unit: "hour" }) : v(r, t.length);
  },
  // Minute
  m: function(e, t, n) {
    return t === "mo" ? n.ordinalNumber(e.getMinutes(), { unit: "minute" }) : U.m(e, t);
  },
  // Second
  s: function(e, t, n) {
    return t === "so" ? n.ordinalNumber(e.getSeconds(), { unit: "second" }) : U.s(e, t);
  },
  // Fraction of second
  S: function(e, t) {
    return U.S(e, t);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function(e, t, n) {
    const r = e.getTimezoneOffset();
    if (r === 0)
      return "Z";
    switch (t) {
      // Hours and optional minutes
      case "X":
        return Ht(r);
      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XX`
      case "XXXX":
      case "XX":
        return B(r);
      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `XXX`
      case "XXXXX":
      case "XXX":
      // Hours and minutes with `:` delimiter
      default:
        return B(r, ":");
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function(e, t, n) {
    const r = e.getTimezoneOffset();
    switch (t) {
      // Hours and optional minutes
      case "x":
        return Ht(r);
      // Hours, minutes and optional seconds without `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xx`
      case "xxxx":
      case "xx":
        return B(r);
      // Hours, minutes and optional seconds with `:` delimiter
      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
      // so this token always has the same output as `xxx`
      case "xxxxx":
      case "xxx":
      // Hours and minutes with `:` delimiter
      default:
        return B(r, ":");
    }
  },
  // Timezone (GMT)
  O: function(e, t, n) {
    const r = e.getTimezoneOffset();
    switch (t) {
      // Short
      case "O":
      case "OO":
      case "OOO":
        return "GMT" + Lt(r, ":");
      // Long
      case "OOOO":
      default:
        return "GMT" + B(r, ":");
    }
  },
  // Timezone (specific non-location)
  z: function(e, t, n) {
    const r = e.getTimezoneOffset();
    switch (t) {
      // Short
      case "z":
      case "zz":
      case "zzz":
        return "GMT" + Lt(r, ":");
      // Long
      case "zzzz":
      default:
        return "GMT" + B(r, ":");
    }
  },
  // Seconds timestamp
  t: function(e, t, n) {
    const r = Math.trunc(+e / 1e3);
    return v(r, t.length);
  },
  // Milliseconds timestamp
  T: function(e, t, n) {
    return v(+e, t.length);
  }
};
function Lt(e, t = "") {
  const n = e > 0 ? "-" : "+", r = Math.abs(e), s = Math.trunc(r / 60), a = r % 60;
  return a === 0 ? n + String(s) : n + String(s) + t + v(a, 2);
}
function Ht(e, t) {
  return e % 60 === 0 ? (e > 0 ? "-" : "+") + v(Math.abs(e) / 60, 2) : B(e, t);
}
function B(e, t = "") {
  const n = e > 0 ? "-" : "+", r = Math.abs(e), s = v(Math.trunc(r / 60), 2), a = v(r % 60, 2);
  return n + s + t + a;
}
const _t = (e, t) => {
  switch (e) {
    case "P":
      return t.date({ width: "short" });
    case "PP":
      return t.date({ width: "medium" });
    case "PPP":
      return t.date({ width: "long" });
    case "PPPP":
    default:
      return t.date({ width: "full" });
  }
}, ee = (e, t) => {
  switch (e) {
    case "p":
      return t.time({ width: "short" });
    case "pp":
      return t.time({ width: "medium" });
    case "ppp":
      return t.time({ width: "long" });
    case "pppp":
    default:
      return t.time({ width: "full" });
  }
}, Nn = (e, t) => {
  const n = e.match(/(P+)(p+)?/) || [], r = n[1], s = n[2];
  if (!s)
    return _t(e, t);
  let a;
  switch (r) {
    case "P":
      a = t.dateTime({ width: "short" });
      break;
    case "PP":
      a = t.dateTime({ width: "medium" });
      break;
    case "PPP":
      a = t.dateTime({ width: "long" });
      break;
    case "PPPP":
    default:
      a = t.dateTime({ width: "full" });
      break;
  }
  return a.replace("{{date}}", _t(r, t)).replace("{{time}}", ee(s, t));
}, xn = {
  p: ee,
  P: Nn
}, Tn = /^D+$/, En = /^Y+$/, Mn = ["D", "DD", "YY", "YYYY"];
function On(e) {
  return Tn.test(e);
}
function Pn(e) {
  return En.test(e);
}
function In(e, t, n) {
  const r = Rn(e, t, n);
  if (console.warn(r), Mn.includes(e)) throw new RangeError(r);
}
function Rn(e, t, n) {
  const r = e[0] === "Y" ? "years" : "days of the month";
  return `Use \`${e.toLowerCase()}\` instead of \`${e}\` (in \`${t}\`) for formatting ${r} to the input \`${n}\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;
}
const Dn = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g, kn = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g, Ln = /^'([^]*?)'?$/, Hn = /''/g, _n = /[a-zA-Z]/;
function Fn(e, t, n) {
  const r = dt(), s = r.locale ?? pn, a = r.firstWeekContainsDate ?? r.locale?.options?.firstWeekContainsDate ?? 1, o = r.weekStartsOn ?? r.locale?.options?.weekStartsOn ?? 0, h = R(e, n?.in);
  if (!Fe(h))
    throw new RangeError("Invalid time value");
  let c = t.match(kn).map((d) => {
    const u = d[0];
    if (u === "p" || u === "P") {
      const f = xn[u];
      return f(d, s.formatLong);
    }
    return d;
  }).join("").match(Dn).map((d) => {
    if (d === "''")
      return { isToken: !1, value: "'" };
    const u = d[0];
    if (u === "'")
      return { isToken: !1, value: Yn(d) };
    if (kt[u])
      return { isToken: !0, value: d };
    if (u.match(_n))
      throw new RangeError(
        "Format string contains an unescaped latin alphabet character `" + u + "`"
      );
    return { isToken: !1, value: d };
  });
  s.localize.preprocessor && (c = s.localize.preprocessor(h, c));
  const l = {
    firstWeekContainsDate: a,
    weekStartsOn: o,
    locale: s
  };
  return c.map((d) => {
    if (!d.isToken) return d.value;
    const u = d.value;
    (Pn(u) || On(u)) && In(u, t, String(e));
    const f = kt[u[0]];
    return f(h, u, s.localize, l);
  }).join("");
}
function Yn(e) {
  const t = e.match(Ln);
  return t ? t[1].replace(Hn, "'") : e;
}
class b {
  constructor(t = {}) {
    this.params = t, this.payload = t;
  }
  payload;
  convert() {
    return this.payload;
  }
}
class ut extends b {
  convert() {
    return this.end(), this.start(), this.payload;
  }
  end() {
    return this.params.end && (this.payload.end = this.formatDate(this.params.end)), this.payload.end;
  }
  start() {
    this.params.start && (this.payload.start = this.formatDate(this.params.start));
  }
  formatDate(t) {
    return Fn(t, "yyyy-MM-dd");
  }
}
class Qn extends M {
  async byCountry(t = {}) {
    const n = new ut(t).convert();
    return await this.client.request("get", "analytics/country", n);
  }
  async byDate(t = {}) {
    const n = new ut(t).convert();
    return await this.client.request("get", "analytics/date", n);
  }
  async byLabel(t = {}) {
    const n = new ut(t).convert();
    return await this.client.request("get", "analytics/label", n);
  }
  async bySubaccount(t = {}) {
    const n = new ut(t).convert();
    return await this.client.request("get", "analytics/subaccount", n);
  }
}
const $n = ["all"], Vn = [
  "only_main",
  "all"
];
class Jn extends M {
  get = async () => await this.client.request("get", "balance", new b().convert());
}
class qn extends b {
  convert() {
    const { groupId: t, orderBy: n, orderDirection: r, limit: s, offset: a, search: o } = this.params, h = {};
    return Number.isInteger(t) && (h.group_id = t), n && (h.order_by = n), r && (h.order_direction = r), Number.isInteger(s) && (h.limit = s), Number.isInteger(a) && (h.offset = a), o && (h.search = o), h;
  }
}
class Ft extends b {
  convert() {
    const { avatar: t, groups: n, properties: r } = this.params, { fullname: s, ...a } = r, o = {};
    return Object.entries(a).forEach(([h, c]) => {
      c !== null && (o[h] = c);
    }), { avatar: t, groups: n, ...o };
  }
}
class zn extends M {
  async create({ avatar: t, groups: n, properties: r }) {
    const s = {
      avatar: t,
      created: "",
      groups: n,
      id: 0,
      initials: {
        color: "",
        initials: ""
      },
      properties: {
        ...r,
        fullname: ""
      },
      validation: {
        state: null,
        timestamp: null
      }
    }, a = new Ft(s).convert();
    return await this.client.request("post", "contacts", a, rt.CONTENT_TYPE_URLENCODED);
  }
  async delete(t) {
    return await this.client.request("delete", `contacts/${t}`, new b().convert());
  }
  async get(t) {
    return await this.client.request("get", `contacts/${t}`, new b().convert());
  }
  async list(t = {}) {
    return await this.client.request("get", "contacts", new qn(t).convert());
  }
  async update(t) {
    const n = new Ft(t).convert();
    return await this.client.request("patch", `contacts/${t.id}`, n, rt.CONTENT_TYPE_URLENCODED);
  }
}
class Zn extends M {
  async edit(t, n) {
    const r = new b(n).convert();
    return await this.client.request("patch", `groups/${t}`, r);
  }
  async create(t) {
    return await this.client.request("post", "groups", new b(t).convert());
  }
  async delete(t, n = !1) {
    const r = `groups/${t}?delete_contacts=${n}`;
    return await this.client.request("delete", r, new b().convert());
  }
  async all() {
    return await this.client.request("get", "groups", new b().convert());
  }
  async one(t) {
    return await this.client.request("get", `groups/${t}`, new b().convert());
  }
}
class Cn extends b {
  convert() {
    const { eventFilter: t, eventType: n, requestMethod: r, targetUrl: s, ...a } = this.params;
    return {
      ...a,
      request_method: r,
      event_filter: t,
      event_type: n,
      target_url: s
    };
  }
}
class tr extends M {
  async read() {
    const t = new b().convert(), n = await this.client.request("get", "hooks", t);
    return n.hooks && (n.hooks = n.hooks.map((r) => (r.created = new Date(r.created), r))), n;
  }
  async subscribe(t) {
    return await this.client.request("post", "hooks", new Cn(t).convert());
  }
  async unsubscribe(t) {
    return await this.client.request("delete", "hooks", new b({ id: t }).convert());
  }
}
const er = [
  "all",
  "dlr",
  "sms_mo",
  "rcs",
  "tracking",
  "voice_call",
  "voice_status"
], nr = [
  "GET",
  "JSON",
  "POST"
];
function rr(e) {
  return e.message_type === "RCS" && e.content_type === "text";
}
function sr(e) {
  return e.user_file !== void 0 && !("thumbnail" in e.user_file);
}
function ar(e) {
  return e.user_file !== void 0 && e.user_file.thumbnail !== void 0;
}
function ir(e) {
  return e.status !== void 0;
}
function or(e) {
  return e.location !== void 0;
}
class gt extends b {
  convert() {
    const { dateFrom: t, dateTo: n, ...r } = this.params;
    return {
      ...r,
      date_from: t,
      date_to: n
    };
  }
}
class ur extends M {
  async inbound(t = {}) {
    return this.client.request("get", "journal/inbound", new gt(t).convert());
  }
  async outbound(t = {}) {
    return this.client.request("get", "journal/outbound", new gt(t).convert());
  }
  voice = async (t = {}) => this.client.request("get", "journal/voice", new gt(t).convert());
}
const cr = [
  "0",
  "1",
  "2",
  "3",
  "5",
  "6",
  "7",
  "8",
  "9",
  "a",
  "b",
  "c",
  "d",
  "e",
  "f",
  "10",
  "11",
  "12",
  "13",
  "14",
  "15",
  "17",
  "18",
  "19",
  "1a",
  "1b",
  "1c",
  "1d",
  "1e",
  "1f",
  "20",
  "21",
  "22",
  "23",
  "24",
  "25",
  "26",
  "27",
  "28",
  "2b",
  "2c",
  "2d",
  "2e",
  "2f",
  "30",
  "31",
  "32",
  "33",
  "34",
  "35",
  "36",
  "3a",
  "47",
  "48",
  "56",
  "2100",
  "2101",
  "2102",
  "2200",
  "2201",
  "2202",
  "2203",
  "2204",
  "2205",
  "2206",
  "2207",
  "2300",
  "2301",
  "2302",
  "2400",
  "2401",
  "2402",
  "2403",
  "2404",
  "6000",
  "6xxx",
  "6001",
  "6002",
  "6003",
  "6004",
  "6005",
  "6006",
  "8000",
  "8001",
  "8002",
  "8003",
  "8004",
  "8008",
  "800b",
  "8010",
  "a001",
  "a002",
  "cxxx",
  "c000",
  "c001",
  "c002",
  "c003",
  "c004",
  "c005",
  "c006",
  "c007",
  "c008",
  "c009",
  "c00a",
  "c00b",
  "c00d",
  "d000",
  "d001",
  "d002",
  "d004",
  "d00a",
  "d00c",
  "d010",
  "d020",
  "e010",
  "e040",
  "e082",
  "fc0a",
  "fc06",
  "fc07",
  "fc08",
  "ffdd",
  "ffde",
  "ffdf",
  "ffe0",
  "ffe1",
  "ffe5",
  "fff0",
  "ffff",
  "4xxx",
  "81xx",
  "82xx",
  "83xx",
  "84xx",
  "85xx",
  "86xx",
  "87xx",
  "88xx",
  "8axx",
  "89xx",
  "8cxx",
  "exxx",
  "e140"
];
var Un = /* @__PURE__ */ ((e) => (e.FixedLine = "fixed_line", e.FixedLineOrMobile = "fixed_line_or_mobile", e.Mobile = "mobile", e.Pager = "pager", e.PersonalNumber = "personal_number", e.PremiumRate = "premium_rate", e.SharedCost = "shared_cost", e.TollFree = "toll_free", e.Uan = "uan", e.Unknown = "unknown", e.Voicemail = "voicemail", e.Voip = "voip", e))(Un || {}), Wn = /* @__PURE__ */ ((e) => (e.D1 = "d1", e.D2 = "d2", e.O2 = "o2", e.Eplus = "eplus", e.NotAvailable = "N/A", e.International = "int", e))(Wn || {});
const hr = [
  100,
  I.InvalidRecipientNumber,
  I.InsufficientCredits,
  I.CarrierFailed
], lr = [
  I.InvalidRecipientNumber,
  I.CarrierFailed
], fr = [
  1,
  2,
  0
], dr = [
  "assumed_not_ported",
  "assumed_ported",
  "not_ported",
  "ported",
  "unknown"
], mr = [
  "absent",
  "bad_number",
  "blacklisted",
  "reachable",
  "undeliverable",
  "unknown"
], wr = ["not_roaming"], gr = [
  "error",
  "success"
], yr = [
  "not_valid",
  "unknown",
  "valid"
], pr = [
  "not_roaming",
  "roaming",
  "unknown"
], br = [
  "100",
  I.InvalidRecipientNumber.toString(),
  I.InsufficientCredits.toString(),
  I.CarrierFailed.toString()
];
class et extends b {
  convert() {
    const { numbers: t, ...n } = this.params;
    return {
      ...n,
      number: this.params.numbers.join(",")
    };
  }
}
class vr extends M {
  async cnam(t) {
    const n = await this.client.request("get", "lookup/cnam", new et(t).convert());
    return Array.isArray(n) ? n : [n];
  }
  async format(t) {
    return await this.client.request("get", "lookup/format", new et(t).convert());
  }
  async hlr(t) {
    return await this.client.request("get", "lookup/hlr", new et(t).convert());
  }
  async mnp(t) {
    return await this.client.request("get", "lookup/mnp", new et(t).convert());
  }
  async rcs(t) {
    return await this.client.request("get", "lookup/rcs", new et(t).convert());
  }
}
class Sr extends M {
  getActive = async (t) => await this.client.request("get", `numbers/active/${t.number}`, {});
  listActive = async () => await this.client.request("get", "numbers/active", {});
  listAvailable = async (t) => await this.client.request("get", "numbers/available", t);
  order = async (t) => (typeof t.number == "object" && (t.number = t.number.number), await this.client.request("post", "numbers/order", t));
  update = async ({ number: t, ...n }) => {
    const r = typeof t == "object" ? t.number : t;
    return await this.client.request("patch", `numbers/active/${r}`, n);
  };
  delete = async ({ number: t, ...n }) => {
    const r = typeof t == "object" ? t.number : t;
    return await this.client.request("delete", `numbers/active/${r}`, n);
  };
}
class Ar extends M {
  get = async (t) => await this.client.request("get", "pricing", new b(t).convert());
}
class Kn extends b {
  convert() {
    const { delay: t, ...n } = this.params;
    return {
      ...n,
      delay: t ? t.valueOf() : void 0
    };
  }
}
class Nr extends M {
  async delete(t) {
    const n = new b().convert();
    return await this.client.request("delete", `rcs/messages/${t.id}`, n);
  }
  async dispatch(t) {
    const n = new Kn(t).convert();
    return await this.client.request("post", "rcs/messages", n);
  }
  async event(t) {
    return await this.client.request("post", "rcs/events", new b(t).convert());
  }
}
const xr = [
  "gsm",
  "ucs2"
], Tr = [
  "direct",
  "economy"
];
class Bn extends b {
  convert() {
    return {
      ids: this.params.ids.join(",")
    };
  }
}
class jn extends b {
  convert() {
    const { delay: t, to: n, ...r } = this.params;
    return {
      ...r,
      delay: t ? t.valueOf() : void 0,
      to: n.join(",")
    };
  }
}
class Er extends M {
  delete = async (t) => await this.client.request("delete", "sms", new Bn(t).convert());
  dispatch = async (t) => await this.client.request("post", "sms", new jn(t).convert());
}
var Xn = /* @__PURE__ */ ((e) => (e.Delivered = "DELIVERED", e.NotDelivered = "NOTDELIVERED", e.Buffered = "BUFFERED", e.Transmitted = "TRANSMITTED", e.Accepted = "ACCEPTED", e.Expired = "EXPIRED", e.Rejected = "REJECTED", e.Failed = "FAILED", e.Unknown = "UNKNOWN", e))(Xn || {});
class Gn extends b {
  convert() {
    return {
      msg_id: this.params.ids.join()
    };
  }
}
class Mr extends M {
  get = async (t) => {
    const n = new Gn({ ids: t }).convert(), r = await this.client.request("get", "status", n);
    return console.log("res", r), Array.isArray(r) ? r : [r];
  };
}
class Or extends M {
  read = async (t) => {
    const n = new b({ id: t }).convert();
    return await this.client.request("get", "subaccounts/read", n);
  };
  create = async (t) => await this.client.request("post", "subaccounts/create", new b(t).convert());
  delete = async (t) => await this.client.request("post", "subaccounts/delete", new b(t).convert());
  transferCredits = async (t) => await this.client.request("post", "subaccounts/transfer_credits", new b(t).convert());
  autoCharge = async (t) => await this.client.request("post", "subaccounts/update", new b(t).convert());
}
class Pr extends M {
  async start(t) {
    return await this.client.request("post", "validate_for_voice", new b(t).convert());
  }
}
class Ir extends M {
  async dispatch(t) {
    const n = new b(t).convert();
    return n.to = Array.isArray(t.to) ? t.to.join(",") : t.to, await this.client.request("post", "voice", n);
  }
}
export {
  Qn as A,
  Jn as B,
  rt as C,
  Mr as D,
  I as E,
  Xn as F,
  Zn as G,
  tr as H,
  Or as I,
  ur as J,
  Ir as K,
  vr as L,
  Un as N,
  Wn as P,
  pr as R,
  br as S,
  Pr as V,
  $n as a,
  Vn as b,
  zn as c,
  er as d,
  nr as e,
  sr as f,
  ar as g,
  ir as h,
  rr as i,
  or as j,
  hr as k,
  lr as l,
  fr as m,
  dr as n,
  mr as o,
  V as p,
  wr as q,
  gr as r,
  yr as s,
  cr as t,
  Sr as u,
  Ar as v,
  Nr as w,
  Er as x,
  xr as y,
  Tr as z
};
